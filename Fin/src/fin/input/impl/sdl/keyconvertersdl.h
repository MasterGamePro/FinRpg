#pragma once

#include "fin/input/ikeyconverter.h"
#include <sdl>

namespace fin::input {
  class KeyConverterGlfw : public IKeyConverter {
    public:
    Keycode get_keycode( int library_key ) override final {
      switch ( library_key ) {
        case GLFW_KEY_SPACE: return KEYCODE_SPACEBAR;
        case GLFW_KEY_APOSTROPHE: return KEYCODE_APOSTROPHE;
        case GLFW_KEY_COMMA: return KEYCODE_COMMA;
        case GLFW_KEY_MINUS: return KEYCODE_MINUS;
        case GLFW_KEY_PERIOD: return KEYCODE_PERIOD;
        case GLFW_KEY_SLASH: return KEYCODE_SLASH_FORWARD;
        case GLFW_KEY_0: return KEYCODE_0;
        case GLFW_KEY_1: return KEYCODE_1;
        case GLFW_KEY_2: return KEYCODE_2;
        case GLFW_KEY_3: return KEYCODE_3;
        case GLFW_KEY_4: return KEYCODE_4;
        case GLFW_KEY_5: return KEYCODE_5;
        case GLFW_KEY_6: return KEYCODE_6;
        case GLFW_KEY_7: return KEYCODE_7;
        case GLFW_KEY_8: return KEYCODE_8;
        case GLFW_KEY_9: return KEYCODE_9;
        case GLFW_KEY_SEMICOLON: return KEYCODE_SEMICOLON;
        case GLFW_KEY_EQUAL: return KEYCODE_EQUAL;
        case GLFW_KEY_A: return KEYCODE_A;
        case GLFW_KEY_B: return KEYCODE_B;
        case GLFW_KEY_C: return KEYCODE_C;
        case GLFW_KEY_D: return KEYCODE_D;
        case GLFW_KEY_E: return KEYCODE_E;
        case GLFW_KEY_F: return KEYCODE_F;
        case GLFW_KEY_G: return KEYCODE_G;
        case GLFW_KEY_H: return KEYCODE_H;
        case GLFW_KEY_I: return KEYCODE_I;
        case GLFW_KEY_J: return KEYCODE_J;
        case GLFW_KEY_K: return KEYCODE_K;
        case GLFW_KEY_L: return KEYCODE_L;
        case GLFW_KEY_M: return KEYCODE_M;
        case GLFW_KEY_N: return KEYCODE_N;
        case GLFW_KEY_O: return KEYCODE_O;
        case GLFW_KEY_P: return KEYCODE_P;
        case GLFW_KEY_Q: return KEYCODE_Q;
        case GLFW_KEY_R: return KEYCODE_R;
        case GLFW_KEY_S: return KEYCODE_S;
        case GLFW_KEY_T: return KEYCODE_T;
        case GLFW_KEY_U: return KEYCODE_U;
        case GLFW_KEY_V: return KEYCODE_V;
        case GLFW_KEY_W: return KEYCODE_W;
        case GLFW_KEY_X: return KEYCODE_X;
        case GLFW_KEY_Y: return KEYCODE_Y;
        case GLFW_KEY_Z: return KEYCODE_Z;
        case GLFW_KEY_LEFT_BRACKET: return KEYCODE_BRACKET_LEFT;
        case GLFW_KEY_BACKSLASH: return KEYCODE_SLASH_BACKWARD;
        case GLFW_KEY_RIGHT_BRACKET: return KEYCODE_BRACKET_RIGHT;
        case GLFW_KEY_GRAVE_ACCENT: return KEYCODE_ACCENT;
        case GLFW_KEY_WORLD_1: return KEYCODE_WORLD_1;
        case GLFW_KEY_WORLD_2: return KEYCODE_WORLD_2;
        case GLFW_KEY_ESCAPE: return KEYCODE_ESC;
        case GLFW_KEY_ENTER: return KEYCODE_ENTER;
        case GLFW_KEY_TAB: return KEYCODE_TAB;
        case GLFW_KEY_BACKSPACE: return KEYCODE_BACKSPACE;
        case GLFW_KEY_INSERT: return KEYCODE_INSERT;
        case GLFW_KEY_DELETE: return KEYCODE_DELETE;
        case GLFW_KEY_RIGHT: return KEYCODE_RIGHT;
        case GLFW_KEY_LEFT: return KEYCODE_LEFT;
        case GLFW_KEY_DOWN: return KEYCODE_DOWN;
        case GLFW_KEY_UP: return KEYCODE_UP;
        case GLFW_KEY_PAGE_UP: return KEYCODE_PAGEUP;
        case GLFW_KEY_PAGE_DOWN: return KEYCODE_PAGEDOWN;
        case GLFW_KEY_HOME: return KEYCODE_HOME;
        case GLFW_KEY_END: return KEYCODE_END;
        case GLFW_KEY_CAPS_LOCK: return KEYCODE_LOCK_CAPS;
        case GLFW_KEY_SCROLL_LOCK: return KEYCODE_LOCK_SCROLL;
        case GLFW_KEY_NUM_LOCK: return KEYCODE_LOCK_NUM;
        case GLFW_KEY_PRINT_SCREEN: return KEYCODE_PRINTSCREEN;
        case GLFW_KEY_PAUSE: return KEYCODE_PAUSE;
        case GLFW_KEY_F1: return KEYCODE_F1;
        case GLFW_KEY_F2: return KEYCODE_F2;
        case GLFW_KEY_F3: return KEYCODE_F3;
        case GLFW_KEY_F4: return KEYCODE_F4;
        case GLFW_KEY_F5: return KEYCODE_F5;
        case GLFW_KEY_F6: return KEYCODE_F6;
        case GLFW_KEY_F7: return KEYCODE_F7;
        case GLFW_KEY_F8: return KEYCODE_F8;
        case GLFW_KEY_F9: return KEYCODE_F9;
        case GLFW_KEY_F10: return KEYCODE_F10;
        case GLFW_KEY_F11: return KEYCODE_F11;
        case GLFW_KEY_F12: return KEYCODE_F12;
        case GLFW_KEY_F13: return KEYCODE_F13;
        case GLFW_KEY_F14: return KEYCODE_F14;
        case GLFW_KEY_F15: return KEYCODE_F15;
        case GLFW_KEY_F16: return KEYCODE_F16;
        case GLFW_KEY_F17: return KEYCODE_F17;
        case GLFW_KEY_F18: return KEYCODE_F18;
        case GLFW_KEY_F19: return KEYCODE_F19;
        case GLFW_KEY_F20: return KEYCODE_F20;
        case GLFW_KEY_F21: return KEYCODE_F21;
        case GLFW_KEY_F22: return KEYCODE_F22;
        case GLFW_KEY_F23: return KEYCODE_F23;
        case GLFW_KEY_F24: return KEYCODE_F24;
        case GLFW_KEY_F25: return KEYCODE_F25;
        case GLFW_KEY_KP_0: return KEYCODE_NUMPAD_0;
        case GLFW_KEY_KP_1: return KEYCODE_NUMPAD_1;
        case GLFW_KEY_KP_2: return KEYCODE_NUMPAD_2;
        case GLFW_KEY_KP_3: return KEYCODE_NUMPAD_3;
        case GLFW_KEY_KP_4: return KEYCODE_NUMPAD_4;
        case GLFW_KEY_KP_5: return KEYCODE_NUMPAD_5;
        case GLFW_KEY_KP_6: return KEYCODE_NUMPAD_6;
        case GLFW_KEY_KP_7: return KEYCODE_NUMPAD_7;
        case GLFW_KEY_KP_8: return KEYCODE_NUMPAD_8;
        case GLFW_KEY_KP_9: return KEYCODE_NUMPAD_9;
        case GLFW_KEY_KP_DECIMAL: return KEYCODE_NUMPAD_DECIMAL;
        case GLFW_KEY_KP_DIVIDE: return KEYCODE_NUMPAD_DIVIDE;
        case GLFW_KEY_KP_MULTIPLY: return KEYCODE_NUMPAD_MULTIPLY;
        case GLFW_KEY_KP_SUBTRACT: return KEYCODE_NUMPAD_SUBTRACT;
        case GLFW_KEY_KP_ADD: return KEYCODE_NUMPAD_ADD;
        case GLFW_KEY_KP_ENTER: return KEYCODE_NUMPAD_ENTER;
        case GLFW_KEY_KP_EQUAL: return KEYCODE_NUMPAD_EQUAL;
        case GLFW_KEY_LEFT_SHIFT: return KEYCODE_SHIFT_LEFT;
        case GLFW_KEY_LEFT_CONTROL: return KEYCODE_CTRL_LEFT;
        case GLFW_KEY_LEFT_ALT: return KEYCODE_ALT_LEFT;
        case GLFW_KEY_LEFT_SUPER: return KEYCODE_SYSTEM_LEFT;
        case GLFW_KEY_RIGHT_SHIFT: return KEYCODE_SHIFT_RIGHT;
        case GLFW_KEY_RIGHT_CONTROL: return KEYCODE_CTRL_RIGHT;
        case GLFW_KEY_RIGHT_ALT: return KEYCODE_ALT_RIGHT;
        case GLFW_KEY_RIGHT_SUPER: return KEYCODE_SYSTEM_RIGHT;
        case GLFW_KEY_MENU: return KEYCODE_MENU;
        default: return KEYCODE_UNDEFINED;
      }
    }

    int get_tkeycode( Keycode key_code ) override final {
      switch ( key_code ) {
        case KEYCODE_SPACEBAR: return GLFW_KEY_SPACE;
        case KEYCODE_APOSTROPHE: return GLFW_KEY_APOSTROPHE;
        case KEYCODE_COMMA: return GLFW_KEY_COMMA;
        case KEYCODE_MINUS: return GLFW_KEY_MINUS;
        case KEYCODE_PERIOD: return GLFW_KEY_PERIOD;
        case KEYCODE_SLASH_FORWARD: return GLFW_KEY_SLASH;
        case KEYCODE_0: return GLFW_KEY_0;
        case KEYCODE_1: return GLFW_KEY_1;
        case KEYCODE_2: return GLFW_KEY_2;
        case KEYCODE_3: return GLFW_KEY_3;
        case KEYCODE_4: return GLFW_KEY_4;
        case KEYCODE_5: return GLFW_KEY_5;
        case KEYCODE_6: return GLFW_KEY_6;
        case KEYCODE_7: return GLFW_KEY_7;
        case KEYCODE_8: return GLFW_KEY_8;
        case KEYCODE_9: return GLFW_KEY_9;
        case KEYCODE_SEMICOLON: return GLFW_KEY_SEMICOLON;
        case KEYCODE_EQUAL: return GLFW_KEY_EQUAL;
        case KEYCODE_A: return GLFW_KEY_A;
        case KEYCODE_B: return GLFW_KEY_B;
        case KEYCODE_C: return GLFW_KEY_C;
        case KEYCODE_D: return GLFW_KEY_D;
        case KEYCODE_E: return GLFW_KEY_E;
        case KEYCODE_F: return GLFW_KEY_F;
        case KEYCODE_G: return GLFW_KEY_G;
        case KEYCODE_H: return GLFW_KEY_H;
        case KEYCODE_I: return GLFW_KEY_I;
        case KEYCODE_J: return GLFW_KEY_J;
        case KEYCODE_K: return GLFW_KEY_K;
        case KEYCODE_L: return GLFW_KEY_L;
        case KEYCODE_M: return GLFW_KEY_M;
        case KEYCODE_N: return GLFW_KEY_N;
        case KEYCODE_O: return GLFW_KEY_O;
        case KEYCODE_P: return GLFW_KEY_P;
        case KEYCODE_Q: return GLFW_KEY_Q;
        case KEYCODE_R: return GLFW_KEY_R;
        case KEYCODE_S: return GLFW_KEY_S;
        case KEYCODE_T: return GLFW_KEY_T;
        case KEYCODE_U: return GLFW_KEY_U;
        case KEYCODE_V: return GLFW_KEY_V;
        case KEYCODE_W: return GLFW_KEY_W;
        case KEYCODE_X: return GLFW_KEY_X;
        case KEYCODE_Y: return GLFW_KEY_Y;
        case KEYCODE_Z: return GLFW_KEY_Z;
        case KEYCODE_BRACKET_LEFT: return GLFW_KEY_LEFT_BRACKET;
        case KEYCODE_SLASH_BACKWARD: return GLFW_KEY_BACKSLASH;
        case KEYCODE_BRACKET_RIGHT: return GLFW_KEY_RIGHT_BRACKET;
        case KEYCODE_ACCENT: return GLFW_KEY_GRAVE_ACCENT;
        case KEYCODE_WORLD_1: return GLFW_KEY_WORLD_1;
        case KEYCODE_WORLD_2: return GLFW_KEY_WORLD_2;
        case KEYCODE_ESC: return GLFW_KEY_ESCAPE;
        case KEYCODE_ENTER: return GLFW_KEY_ENTER;
        case KEYCODE_TAB: return GLFW_KEY_TAB;
        case KEYCODE_BACKSPACE: return GLFW_KEY_BACKSPACE;
        case KEYCODE_INSERT: return GLFW_KEY_INSERT;
        case KEYCODE_DELETE: return GLFW_KEY_DELETE;
        case KEYCODE_RIGHT: return GLFW_KEY_RIGHT;
        case KEYCODE_LEFT: return GLFW_KEY_LEFT;
        case KEYCODE_DOWN: return GLFW_KEY_DOWN;
        case KEYCODE_UP: return GLFW_KEY_UP;
        case KEYCODE_PAGEUP: return GLFW_KEY_PAGE_UP;
        case KEYCODE_PAGEDOWN: return GLFW_KEY_PAGE_DOWN;
        case KEYCODE_HOME: return GLFW_KEY_HOME;
        case KEYCODE_END: return GLFW_KEY_END;
        case KEYCODE_LOCK_CAPS: return GLFW_KEY_CAPS_LOCK;
        case KEYCODE_LOCK_SCROLL: return GLFW_KEY_SCROLL_LOCK;
        case KEYCODE_LOCK_NUM: return GLFW_KEY_NUM_LOCK;
        case KEYCODE_PRINTSCREEN: return GLFW_KEY_PRINT_SCREEN;
        case KEYCODE_PAUSE: return GLFW_KEY_PAUSE;
        case KEYCODE_F1: return GLFW_KEY_F1;
        case KEYCODE_F2: return GLFW_KEY_F2;
        case KEYCODE_F3: return GLFW_KEY_F3;
        case KEYCODE_F4: return GLFW_KEY_F4;
        case KEYCODE_F5: return GLFW_KEY_F5;
        case KEYCODE_F6: return GLFW_KEY_F6;
        case KEYCODE_F7: return GLFW_KEY_F7;
        case KEYCODE_F8: return GLFW_KEY_F8;
        case KEYCODE_F9: return GLFW_KEY_F9;
        case KEYCODE_F10: return GLFW_KEY_F10;
        case KEYCODE_F11: return GLFW_KEY_F11;
        case KEYCODE_F12: return GLFW_KEY_F12;
        case KEYCODE_F13: return GLFW_KEY_F13;
        case KEYCODE_F14: return GLFW_KEY_F14;
        case KEYCODE_F15: return GLFW_KEY_F15;
        case KEYCODE_F16: return GLFW_KEY_F16;
        case KEYCODE_F17: return GLFW_KEY_F17;
        case KEYCODE_F18: return GLFW_KEY_F18;
        case KEYCODE_F19: return GLFW_KEY_F19;
        case KEYCODE_F20: return GLFW_KEY_F20;
        case KEYCODE_F21: return GLFW_KEY_F21;
        case KEYCODE_F22: return GLFW_KEY_F22;
        case KEYCODE_F23: return GLFW_KEY_F23;
        case KEYCODE_F24: return GLFW_KEY_F24;
        case KEYCODE_F25: return GLFW_KEY_F25;
        case KEYCODE_NUMPAD_0: return GLFW_KEY_KP_0;
        case KEYCODE_NUMPAD_1: return GLFW_KEY_KP_1;
        case KEYCODE_NUMPAD_2: return GLFW_KEY_KP_2;
        case KEYCODE_NUMPAD_3: return GLFW_KEY_KP_3;
        case KEYCODE_NUMPAD_4: return GLFW_KEY_KP_4;
        case KEYCODE_NUMPAD_5: return GLFW_KEY_KP_5;
        case KEYCODE_NUMPAD_6: return GLFW_KEY_KP_6;
        case KEYCODE_NUMPAD_7: return GLFW_KEY_KP_7;
        case KEYCODE_NUMPAD_8: return GLFW_KEY_KP_8;
        case KEYCODE_NUMPAD_9: return GLFW_KEY_KP_9;
        case KEYCODE_NUMPAD_DECIMAL: return GLFW_KEY_KP_DECIMAL;
        case KEYCODE_NUMPAD_DIVIDE: return GLFW_KEY_KP_DIVIDE;
        case KEYCODE_NUMPAD_MULTIPLY: return GLFW_KEY_KP_MULTIPLY;
        case KEYCODE_NUMPAD_SUBTRACT: return GLFW_KEY_KP_SUBTRACT;
        case KEYCODE_NUMPAD_ADD: return GLFW_KEY_KP_ADD;
        case KEYCODE_NUMPAD_ENTER: return GLFW_KEY_KP_ENTER;
        case KEYCODE_NUMPAD_EQUAL: return GLFW_KEY_KP_EQUAL;
        case KEYCODE_SHIFT_LEFT: return GLFW_KEY_LEFT_SHIFT;
        case KEYCODE_CTRL_LEFT: return GLFW_KEY_LEFT_CONTROL;
        case KEYCODE_ALT_LEFT: return GLFW_KEY_LEFT_ALT;
        case KEYCODE_SYSTEM_LEFT: return GLFW_KEY_LEFT_SUPER;
        case KEYCODE_SHIFT_RIGHT: return GLFW_KEY_RIGHT_SHIFT;
        case KEYCODE_CTRL_RIGHT: return GLFW_KEY_RIGHT_CONTROL;
        case KEYCODE_ALT_RIGHT: return GLFW_KEY_RIGHT_ALT;
        case KEYCODE_SYSTEM_RIGHT: return GLFW_KEY_RIGHT_SUPER;
        case KEYCODE_MENU: return GLFW_KEY_MENU;
        default: return 0;
      }
    }
  };
}
